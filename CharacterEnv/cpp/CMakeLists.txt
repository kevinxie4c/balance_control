cmake_minimum_required(VERSION 3.16)
project(balance_control)

set(Boost_NO_BOOST_CMAKE ON)
find_package(Eigen3 REQUIRED)
find_package(Boost REQUIRED)
find_package(DART REQUIRED)
find_package(nlohmann_json REQUIRED)
find_package(OpenSceneGraph REQUIRED)
find_package(Bullet REQUIRED)
include_directories(${Boost_INCLUDE_DIRS})
include_directories(${DART_INCLUDE_DIRS})
include_directories(${OPENSCENEGRAPH_INCLUDE_DIRS})
include_directories(${BULLET_INCLUDE_DIR})

message("Boost_INCLUDE_DIRS: ${Boost_INCLUDE_DIRS}")
message("DART_INCLUDE_DIRS: ${DART_INCLUDE_DIRS}")
message("OPENSCENEGRAPH_INCLUDE_DIRS: ${OPENSCENEGRAPH_INCLUDE_DIRS}")

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -g")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -O3 -DNDEBUG")

add_library(CharacterEnv STATIC src/CharacterEnv.cpp src/MimicEnv.cpp src/SimpleEnv.cpp src/MomentumCtrlEnv.cpp src/SimCharacter.cpp src/MathUtil.cpp src/IOUtil.cpp src/ParallelEnv.cpp src/CustomEventHandler.cpp src/CartpoleEnv.cpp src/QuadEnv.cpp src/AntEnv.cpp)
#target_link_libraries(CharacterEnv stdc++ dart assimp boost_system)
target_link_libraries(CharacterEnv nlohmann_json::nlohmann_json Eigen3::Eigen OpenSceneGraph)
